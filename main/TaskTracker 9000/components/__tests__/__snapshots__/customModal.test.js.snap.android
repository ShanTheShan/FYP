// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Modals snapshot tests in customModals should render AddCellModal correctly in dark mode 1`] = `
<Modal
  animationType="fade"
  hardwareAccelerated={false}
  statusBarTranslucent={true}
  transparent={true}
  visible={true}
>
  <View
    style={
      {
        "alignItems": "center",
        "backgroundColor": "rgba(0, 0, 0, 0.8)",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "backgroundColor": "#1F1F1F",
          "borderRadius": 20,
          "elevation": 10,
          "padding": 35,
        }
      }
    >
      <TextInput
        multiline={true}
        onChangeText={[Function]}
        placeholderTextColor="white"
        style={
          {
            "borderColor": "white",
            "borderRadius": 10,
            "borderWidth": 1,
            "color": "white",
            "height": 150,
            "marginTop": 20,
            "paddingLeft": 5,
            "paddingRight": 2,
            "paddingTop": 5,
            "textAlignVertical": "top",
            "width": 200,
          }
        }
        value=""
      />
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "backgroundColor": "darkgreen",
            "borderRadius": 20,
            "elevation": 2,
            "marginTop": 10,
            "opacity": 1,
            "padding": 15,
          }
        }
      >
        <Text
          style={
            {
              "color": "white",
            }
          }
        >
          Done
        </Text>
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "backgroundColor": "darkred",
            "borderRadius": 20,
            "marginTop": 15,
            "opacity": 1,
            "padding": 15,
          }
        }
      >
        <Text
          style={
            {
              "color": "white",
            }
          }
        >
          Cancel
        </Text>
      </View>
    </View>
  </View>
</Modal>
`;

exports[`Modals snapshot tests in customModals should render AddCellModal correctly in light mode 1`] = `
<Modal
  animationType="fade"
  hardwareAccelerated={false}
  statusBarTranslucent={true}
  transparent={true}
  visible={true}
>
  <View
    style={
      {
        "alignItems": "center",
        "backgroundColor": "rgba(0, 0, 0, 0.8)",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "backgroundColor": "white",
          "borderRadius": 20,
          "elevation": 10,
          "padding": 35,
        }
      }
    >
      <TextInput
        multiline={true}
        onChangeText={[Function]}
        placeholderTextColor="black"
        style={
          {
            "borderColor": "black",
            "borderRadius": 10,
            "borderWidth": 1,
            "color": "black",
            "height": 150,
            "marginTop": 20,
            "paddingLeft": 5,
            "paddingRight": 2,
            "paddingTop": 5,
            "textAlignVertical": "top",
            "width": 200,
          }
        }
        value=""
      />
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "backgroundColor": "darkgreen",
            "borderRadius": 20,
            "elevation": 2,
            "marginTop": 10,
            "opacity": 1,
            "padding": 15,
          }
        }
      >
        <Text
          style={
            {
              "color": "white",
            }
          }
        >
          Done
        </Text>
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "backgroundColor": "darkred",
            "borderRadius": 20,
            "marginTop": 15,
            "opacity": 1,
            "padding": 15,
          }
        }
      >
        <Text
          style={
            {
              "color": "white",
            }
          }
        >
          Cancel
        </Text>
      </View>
    </View>
  </View>
</Modal>
`;

exports[`Modals snapshot tests in customModals should render DeleteCellModal correctly in dark mode 1`] = `
<Modal
  animationType="fade"
  hardwareAccelerated={false}
  statusBarTranslucent={true}
  transparent={true}
  visible={true}
>
  <View
    style={
      {
        "alignItems": "center",
        "backgroundColor": "rgba(0, 0, 0, 0.8)",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "backgroundColor": "#1F1F1F",
          "borderRadius": 20,
          "elevation": 10,
          "padding": 35,
        }
      }
    >
      <Text
        style={
          [
            {
              "color": "white",
            },
            {
              "textAlign": "center",
            },
          ]
        }
      >
        Do you want to delete this 
        item
        ?
      </Text>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "backgroundColor": "darkgreen",
            "borderRadius": 20,
            "elevation": 2,
            "marginTop": 10,
            "opacity": 1,
            "padding": 15,
          }
        }
      >
        <Text
          style={
            {
              "color": "white",
            }
          }
        >
          YES
        </Text>
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "backgroundColor": "darkred",
            "borderRadius": 20,
            "marginTop": 15,
            "opacity": 1,
            "padding": 15,
          }
        }
      >
        <Text
          style={
            {
              "color": "white",
            }
          }
        >
          NO
        </Text>
      </View>
    </View>
  </View>
</Modal>
`;

exports[`Modals snapshot tests in customModals should render DeleteCellModal correctly in light mode 1`] = `
<Modal
  animationType="fade"
  hardwareAccelerated={false}
  statusBarTranslucent={true}
  transparent={true}
  visible={true}
>
  <View
    style={
      {
        "alignItems": "center",
        "backgroundColor": "rgba(0, 0, 0, 0.8)",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "backgroundColor": "white",
          "borderRadius": 20,
          "elevation": 10,
          "padding": 35,
        }
      }
    >
      <Text
        style={
          [
            {
              "color": "black",
            },
            {
              "textAlign": "center",
            },
          ]
        }
      >
        Do you want to delete this 
        item
        ?
      </Text>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "backgroundColor": "darkgreen",
            "borderRadius": 20,
            "elevation": 2,
            "marginTop": 10,
            "opacity": 1,
            "padding": 15,
          }
        }
      >
        <Text
          style={
            {
              "color": "white",
            }
          }
        >
          YES
        </Text>
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "backgroundColor": "darkred",
            "borderRadius": 20,
            "marginTop": 15,
            "opacity": 1,
            "padding": 15,
          }
        }
      >
        <Text
          style={
            {
              "color": "white",
            }
          }
        >
          NO
        </Text>
      </View>
    </View>
  </View>
</Modal>
`;

exports[`Modals snapshot tests in customModals should render EditCellModal correctly in dark mode 1`] = `
<Modal
  animationType="fade"
  hardwareAccelerated={false}
  statusBarTranslucent={true}
  transparent={true}
  visible={true}
>
  <View
    style={
      {
        "alignItems": "center",
        "backgroundColor": "rgba(0, 0, 0, 0.8)",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "backgroundColor": "#1F1F1F",
          "borderRadius": 20,
          "elevation": 10,
          "padding": 35,
        }
      }
    >
      <TextInput
        multiline={true}
        onChangeText={[Function]}
        placeholderTextColor="white"
        style={
          {
            "borderColor": "white",
            "borderRadius": 10,
            "borderWidth": 1,
            "color": "white",
            "height": 150,
            "marginTop": 20,
            "paddingLeft": 5,
            "paddingRight": 2,
            "paddingTop": 5,
            "textAlignVertical": "top",
            "width": 200,
          }
        }
        value="Test text"
      />
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "backgroundColor": "darkgreen",
            "borderRadius": 20,
            "elevation": 2,
            "marginTop": 10,
            "opacity": 1,
            "padding": 15,
          }
        }
      >
        <Text
          style={
            {
              "color": "white",
            }
          }
        >
          Done
        </Text>
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "backgroundColor": "darkred",
            "borderRadius": 20,
            "marginTop": 15,
            "opacity": 1,
            "padding": 15,
          }
        }
      >
        <Text
          style={
            {
              "color": "white",
            }
          }
        >
          Cancel
        </Text>
      </View>
    </View>
  </View>
</Modal>
`;

exports[`Modals snapshot tests in customModals should render EditCellModal correctly in light mode 1`] = `
<Modal
  animationType="fade"
  hardwareAccelerated={false}
  statusBarTranslucent={true}
  transparent={true}
  visible={true}
>
  <View
    style={
      {
        "alignItems": "center",
        "backgroundColor": "rgba(0, 0, 0, 0.8)",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "backgroundColor": "white",
          "borderRadius": 20,
          "elevation": 10,
          "padding": 35,
        }
      }
    >
      <TextInput
        multiline={true}
        onChangeText={[Function]}
        placeholderTextColor="black"
        style={
          {
            "borderColor": "black",
            "borderRadius": 10,
            "borderWidth": 1,
            "color": "black",
            "height": 150,
            "marginTop": 20,
            "paddingLeft": 5,
            "paddingRight": 2,
            "paddingTop": 5,
            "textAlignVertical": "top",
            "width": 200,
          }
        }
        value="Test text"
      />
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "backgroundColor": "darkgreen",
            "borderRadius": 20,
            "elevation": 2,
            "marginTop": 10,
            "opacity": 1,
            "padding": 15,
          }
        }
      >
        <Text
          style={
            {
              "color": "white",
            }
          }
        >
          Done
        </Text>
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "backgroundColor": "darkred",
            "borderRadius": 20,
            "marginTop": 15,
            "opacity": 1,
            "padding": 15,
          }
        }
      >
        <Text
          style={
            {
              "color": "white",
            }
          }
        >
          Cancel
        </Text>
      </View>
    </View>
  </View>
</Modal>
`;

exports[`Modals snapshot tests in customModals should render ShowImageCellModal correctly in dark mode 1`] = `
<Modal
  animationType="fade"
  hardwareAccelerated={false}
  statusBarTranslucent={true}
  transparent={true}
  visible={true}
>
  <View
    style={
      {
        "alignItems": "center",
        "backgroundColor": "rgba(0, 0, 0, 0.8)",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "backgroundColor": "#1F1F1F",
          "borderRadius": 20,
          "elevation": 10,
        }
      }
    >
      <Image
        source={1}
        style={
          {
            "borderRadius": 5,
            "height": 300,
            "margin": "5%",
            "width": 300,
          }
        }
      />
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "backgroundColor": "darkred",
            "borderRadius": 10,
            "marginBottom": 10,
            "opacity": 1,
            "padding": 15,
          }
        }
      >
        <Text
          style={
            {
              "color": "white",
            }
          }
        >
          Close
        </Text>
      </View>
    </View>
  </View>
</Modal>
`;

exports[`Modals snapshot tests in customModals should render ShowImageCellModal correctly in light mode 1`] = `
<Modal
  animationType="fade"
  hardwareAccelerated={false}
  statusBarTranslucent={true}
  transparent={true}
  visible={true}
>
  <View
    style={
      {
        "alignItems": "center",
        "backgroundColor": "rgba(0, 0, 0, 0.8)",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "backgroundColor": "white",
          "borderRadius": 20,
          "elevation": 10,
        }
      }
    >
      <Image
        source={1}
        style={
          {
            "borderRadius": 5,
            "height": 300,
            "margin": "5%",
            "width": 300,
          }
        }
      />
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "backgroundColor": "darkred",
            "borderRadius": 10,
            "marginBottom": 10,
            "opacity": 1,
            "padding": 15,
          }
        }
      >
        <Text
          style={
            {
              "color": "white",
            }
          }
        >
          Close
        </Text>
      </View>
    </View>
  </View>
</Modal>
`;
